- name: Check for existing kubelet configuration
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: kubelet_conf

- name: kubeadm init
  command: "kubeadm init --skip-preflight-checks --kubernetes-version v1.10.3 --apiserver-advertise-address {{ hostvars[groups.master[0]].ansible_ssh_host }}"
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: kubelet_conf.stat.exists == False

- name: generate a join token
  command: kubeadm token create --print-join-command
  register: joincommand

- name: set fact joincommand
  set_fact:
    joincommand: "{{ joincommand.stdout }}"

- name: Upload the openstack-cloud-controller-manager pod descriptor
  copy:
    dest: /etc/kubernetes/manifests/openstack-cloud-controller-manager-pod.yaml
    src: files/openstack-cloud-controller-manager-pod.yaml

- name: Configure kube-controller-manager cloud provider integration
  copy:
    dest: /etc/kubernetes/manifests/kube-controller-manager.yaml
    src: files/kube-controller-manager.yaml

- name: Create folder /home/ubuntu/manifests
  file:
    state: directory
    path: /home/ubuntu/manifests
    mode: 0755
    owner: ubuntu
    group: ubuntu

- name: Upload webook kubeconfig file
  copy:
    dest: /etc/kubernetes/pki/webhook.kubeconfig.yaml
    src: files/webhook.kubeconfig.yaml

- name: Upload the k8s-keystone-auth deployment manifest
  template:
    dest: /home/ubuntu/manifests/k8s-keystone-auth.yaml
    src: files/k8s-keystone-auth.yaml.j2


- name: copy k8s-auth-policy.yaml
  copy:
    src: k8s-auth-policy.yaml
    dest: /home/ubuntu/manifests/k8s-auth-policy.yaml


- name: Configure keystone integration
  blockinfile:
    insertbefore: 'image: '
    block: "    - --authentication-token-webhook-config-file=/etc/kubernetes/pki/webhook.kubeconfig.yaml\n    - --authorization-mode=Node,Webhook,RBAC\n    - --authorization-webhook-config-file=/etc/kubernetes/pki/webhook.kubeconfig.yaml"
    path: /etc/kubernetes/manifests/kube-apiserver.yaml

- name: In case of upgrade make sure container versions are right for kube-apiserver
  replace:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    regexp: v1.[0-9]{1,2}.[0-9]{1,2}
    replace: v1.10.3

- name: In case of upgrade make sure container versions are right for kube-controller-manager
  replace:
    path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    regexp: v1.[0-9]{1,2}.[0-9]{1,2}
    replace: v1.10.3

- name: In case of upgrade make sure container versions are right for kube-scheduler
  replace:
    path: /etc/kubernetes/manifests/kube-scheduler.yaml
    regexp: v1.[0-9]{1,2}.[0-9]{1,2}
    replace: v1.10.3

- name: Ensure kubectl configuration directory is present
  become: True
  file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0700

- name: Copy kubectl configuration for the default user
  become: True
  copy:
    remote_src: True
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    owner: ubuntu
    group: ubuntu
    mode: 0600

- name: Check for existing kubectl bash completion
  stat:
    path: /etc/bash_completion.d/kubectl
  register: kubectl_bash_completion

- name: Ensure kubectl bash_completion is present
  become: True
  shell: kubectl completion bash > /etc/bash_completion.d/kubectl
  when: kubectl_bash_completion.stat.exists == False

- name: Fetch CA cert
  fetch:
    src: /etc/kubernetes/pki/ca.crt
    dest: /tmp/

#- name: wait for API service to be active
#  wait_for:
#    port: 6443
#    host: 127.0.0.1
#    delay: 3
#  connection: local

- name: check if keystone-auth-secret exists
  command: kubectl get secret keystone-auth-secret -n kube-system --kubeconfig=/home/ubuntu/.kube/config
  register: getsecret
  ignore_errors: true

- name: create secret keystone-auth-secret
  command: kubectl create secret generic keystone-auth-secret --from-file=cert-file=/etc/kubernetes/pki/apiserver.crt --from-file=key-file=/etc/kubernetes/pki/apiserver.key -n kube-system --kubeconfig=/home/ubuntu/.kube/config
  when: getsecret.rc == 1

- name: kubectl apply k8s-auth-policy
  command: kubectl apply -f /home/ubuntu/manifests/k8s-auth-policy.yaml --kubeconfig=/home/ubuntu/.kube/config

- name: kubectl apply k8s-keystone-auth
  command: kubectl apply -f /home/ubuntu/manifests/k8s-keystone-auth.yaml --kubeconfig=/home/ubuntu/.kube/config
